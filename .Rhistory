install.packages("shiny")
library(SDR)
SDR_GUI()
habermanTra
library(SDR)
habermanTra$data
class(habermanTra$data[[244]])
germanTra$data
setwd("~/MEGA/MEGAsync/Universidad/Investigacion/DATASETS/banana")
read.keel("banana-5-1tra.dat")
setwd("~/MEGA/MEGAsync/Universidad/Trabajo Fin de Grado/SDR")
setwd("~/MEGA/MEGAsync/Universidad/Investigacion/DATASETS/banana")
banana <- read.keel("banana-5-1tra.dat
")
banana <- read.keel("banana-5-1tra.dat")
list(banana$data, c(1,1,1))
length(banana$data)
banana$data[[length(banana$data) + 1]] <- c(1,2,3)
length(banana$data)
banana$data
rbind(banana$data, c(4,5,6))
install.packages("microbenchmark")
microbenchmark::microbenchmark(banana$data[length(banana$data) + 1] <- c(4,5,6))
warnings()
microbenchmark::microbenchmark(banana$data[[length(banana$data) + 1]] <- c(1,2,3))
class(list())
class(vector(0)
)
class(vector())
salida <- vector(mode = "list", length = length(banana$data) + 10)
salida[seq_len(length(banana$data))] <- banana$data
salida
library(SDR)
germanTra
germanTra$max
germanTra$data[[1]]
banana$categoricalValues
"ca" == banana$categoricalValues[[3]]
"1.0" == banana$categoricalValues[[3]]
setwd("~/MEGA/MEGAsync/Universidad/Investigacion/DATASETS/MIXTOS/australian")
library(SDR)
australian <- read.keel("australian-5-1tra.dat")
australian["categoricalValues"]
cValues <- which(australian$atributeTypes == "c")
cItem <- c(1, 2208.0, 1146.0, 2, 4.0, 4.0, 1585.0, 0, 0, 0.0, 1, 2, 100.0, 1213.0, 0)
catData <- cValues
rm(cValues)
cItem <- cItem[catData]
cvalues <- australian$categoricalValues[catData]
lapply(X = seq_len(length(cItem)), FUN = function(x, lista, items){ any(lista[[x]] == item[x])})
lapply(X = seq_len(length(cItem)), FUN = function(x, lista, items){ any(lista[[x]] == item[x])}, cvalues, cItem)
lapply(X = seq_len(length(cItem)), FUN = function(x, lista, items){ any(lista[[x]] == items[x])}, cvalues, cItem)
library(SDR)
.checkElement()
.checkElement
library(SDR)
library(SDR)
checkElement(c(0,0,"1.0"))
checkElement(c(0,0,"1.0"), banana)
library(SDR)
checkElement(c(0,0,"1.0"), banana)
library(SDR)
checkElement(c(0,0,"1.0"), banana)
all(nItem >= min & nItem <= max)
setwd("~/MEGA/MEGAsync/Universidad/Investigacion/DATASETS/saheart")
saheart <- read.keel("saheart-5-1tra.dat")
checkElement(c(118, 0.08, 3.48, 32.28, "Present", 52, 29.14, 3.81, 46, 0), saheart)
checkElement(c(118, 0.08, 3.48, 32.28, "Presente", 52, 29.14, 3.81, 46, 0), saheart)
banana$data
setwd("~/MEGA/MEGAsync/Universidad/Investigacion/DATASETS/banana")
library(SDR)
banana <- read.keel("banana-5-1tra.dat")
addKeelRegister(c(1.14,-0.114,0), banana)
addKeelRegister(list(c(1.14,-0.114,0), c(1.14,-0.114,0), c(1.14,-0.114,0)), banana)
addKeelRegister(list(c(1.14,-0.114,"1.0"), c(1.14,-0.114,"-1.0"), c(1.14,-0.114,"1.0")), banana)
.processData
library(SDR)
processData(c(1.14, -0.114, "1.0"), banana$categoricalValues, banan)
processData(c(1.14, -0.114, "1.0"), banana$categoricalValues, banana$atributeTypes)
banana$categoricalValues
processData(c(1.14, -0.114, "1.0"), banana$categoricalValues, banana$atributeTypes)
c(1.14, -0.114, "1.0")
as.numeric(c(1.14, -0.114, "1.0"))
processData(c(1.14, -0.114, "1.0"), banana$categoricalValues, banana$atributeTypes)
processData("1.14, -0.114, 1.0", banana$categoricalValues, banana$atributeTypes)
processData("1.14, -0.114, -1.0", banana$categoricalValues, banana$atributeTypes)
nodo <- list(
hijoIzq = list(),
hijoDcha = list(),
data = NA,
isLeaf = TRUE
)
class(nodo) <- "Node"
class(nodo)
new("Node")
new(Node)
newNode <- function(parent, left){
if(left){
parent$hijoIzq <- list(
hijoIzq = list(),
hijoDcha = list(),
data = NA,
isLeaf = TRUE
)
} else {
parent$hijoDcha <- list(
hijoIzq = list(),
hijoDcha = list(),
data = NA,
isLeaf = TRUE
)
}
parent
}
newNode(nodo, TRUE)
newNode <- function(parent, left){
if(left){
parent$hijoIzq <- list(
hijoIzq = list(),
hijoDcha = list(),
data = NA,
isLeaf = TRUE
)
} else {
parent$hijoDcha <- list(
hijoIzq = list(),
hijoDcha = list(),
data = NA,
isLeaf = TRUE
)
}
parent$isLeaf = FALSE
parent
}
nodo <- list(
hijoIzq = list(),
hijoDcha = list(),
data = NA,
isLeaf = TRUE
)
newNode(nodo, TRUE)
arbol <- newNode(nodo, TRUE)
arbol <- newNode(nodo, FALSE)
arbol <- newNode(nodo, TRUE)
arbol <- newNode(arbol, TRUE)
arbol <- newNode(arbol$hijoIzq, TRUE)
arbol$hijoIzq <- newNode(arbol$hijoIzq, TRUE)
